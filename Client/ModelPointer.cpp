#include "ModelPointer.h"

mat2x2 blockModel2x2_[1][4] = {
    {   // O 모양
        { // 회전 0도
            {1,1},
            {1,1}
        },
        { // 회전 90도
            {1,1},
            {1,1}
        },
        { // 회전 180도
            {1,1},
            {1,1}
        },
        { // 회전 270도
            {1,1},
            {1,1}
        }
    }
};

mat3x3 blockModel3x3_[5][4] = {
    {   // 인덱스 0: J 모양
        { // 회전 0도
            {1,0,0},
            {1,1,1},
            {0,0,0}
        },
        { // 회전 90도
            {0,1,1},
            {0,1,0},
            {0,1,0}
        },
        { // 회전 180도
            {0,0,0},
            {1,1,1},
            {0,0,1}
        },
        { // 회전 270도
            {0,1,0},
            {0,1,0},
            {1,1,0}
        }
    },
    {   // 인덱스 1: L 모양
        { // 회전 0도
            {0,0,1},
    {1,1,1},
    {0,0,0}
        },
        { // 회전 90도
            {0,1,0},
    {0,1,0},
    {0,1,1}
        },
        { // 회전 180도
            {0,0,0},
    {1,1,1},
    {1,0,0}
        },
        { // 회전 270도
            {1,1,0},
    {0,1,0},
    {0,1,0}
        }
    },
    {   // 인덱스 2: S 모양
        { // 회전 0도
            {0,1,1},
    {1,1,0},
    {0,0,0}
        },
        { // 회전 90도
            {0,1,0},
    {0,1,1},
    {0,0,1}
        },
        { // 회전 180도 (0도와 동일)
            {0,1,1},
    {1,1,0},
    {0,0,0}
        },
        { // 회전 270도 (90도와 동일)
            {0,1,0},
    {0,1,1},
    {0,0,1}
        }
    },
    {   // 인덱스 3: T 모양
        { // 회전 0도
            {0,1,0},
    {1,1,1},
    {0,0,0}
        },
        { // 회전 90도
            {0,1,0},
    {0,1,1},
    {0,1,0}
        },
        { // 회전 180도
            {0,0,0},
    {1,1,1},
    {0,1,0}
        },
        { // 회전 270도
            {0,1,0},
    {1,1,0},
    {0,1,0}
        }
    },
    {   // 인덱스 4: Z 모양
        { // 회전 0도
            {1,1,0},
    {0,1,1},
    {0,0,0}
        },
        { // 회전 90도
            {0,0,1},
    {0,1,1},
    {0,1,0}
        },
        { // 회전 180도 (0도와 동일)
            {1,1,0},
    {0,1,1},
    {0,0,0}
        },
        { // 회전 270도 (90도와 동일)
            {0,0,1},
    {0,1,1},
    {0,1,0}
        }
    }
};

mat4x4 blockModel4x4_[1][4] = {
	{ // 인덱스 0: I 모양
		{ // 회전 0도
			{0,0,0,0},
			{1,1,1,1},
			{0,0,0,0},
			{0,0,0,0}
		},
		{ // 회전 90도
			{0,0,1,0},
			{0,0,1,0},
			{0,0,1,0},
			{0,0,1,0}
		},
		{ // 회전 180도 (I 모양은 0도와 동일)
			{0,0,0,0},
			{1,1,1,1},
			{0,0,0,0},
			{0,0,0,0}
		},
		{ // 회전 270도 (I 모양은 90도와 동일)
			{0,0,1,0},
			{0,0,1,0},
			{0,0,1,0},
			{0,0,1,0}
		}
	}
};

ModelPointer modelPointers[SHAPE_COUNT][ROTATION_COUNT];

void InitializeModelPointers() {
    // 모든 블록 모양과 회전 상태에 대해 포인터 초기화
    for(int r = 0; r < ROTATION_COUNT; r++) {

        // O 모양 처리 (2x2)
        modelPointers[SHAPE_O][r].mat2 = &blockModel2x2_[0][r];  // O 모양

		// 3x3 블록 모양들 처리
		modelPointers[SHAPE_J][r].mat3 = &blockModel3x3_[0][r];  // T 모양
		modelPointers[SHAPE_L][r].mat3 = &blockModel3x3_[1][r];  // L 모양
		modelPointers[SHAPE_S][r].mat3 = &blockModel3x3_[2][r];  // J 모양
		modelPointers[SHAPE_T][r].mat3 = &blockModel3x3_[3][r];  // S 모양
		modelPointers[SHAPE_Z][r].mat3 = &blockModel3x3_[4][r];  // Z 모양

        // I 모양 처리 (4x4)
        modelPointers[SHAPE_I][r].mat4 = &blockModel4x4_[0][r];
    }
}